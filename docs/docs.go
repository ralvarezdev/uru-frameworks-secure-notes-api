// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "GPL-3.0",
            "url": "http://www.gnu.org/licenses/gpl-3.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/auth/2fa/disable": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Disables 2FA for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 auth"
                ],
                "summary": "Disable 2FA for the authenticated user",
                "parameters": [
                    {
                        "description": "Disable User 2FA Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_auth.DisableUser2FARequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSendSuccessBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/2fa/email/send-code": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Sends a 2FA email code to the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 auth"
                ],
                "summary": "Send 2FA email code to the authenticated user",
                "parameters": [
                    {
                        "description": "Send User 2FA Email Code Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_auth.SendUser2FAEmailCodeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSendSuccessBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/2fa/enable": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Enables 2FA for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 auth"
                ],
                "summary": "Enable 2FA for the authenticated user",
                "parameters": [
                    {
                        "description": "Enable User 2FA Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_auth.EnableUser2FARequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSendSuccessBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/2fa/recovery-codes/regenerate": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Regenerates the 2FA recovery codes for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 auth"
                ],
                "summary": "Regenerate 2FA recovery codes for the authenticated user",
                "parameters": [
                    {
                        "description": "Regenerate User 2FA Recovery Codes Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_auth.RegenerateUser2FARecoveryCodesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_auth.RegenerateUser2FARecoveryCodesResponseBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/2fa/totp": {
            "delete": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Revokes a user's 2FA TOTP",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 auth"
                ],
                "summary": "Revoke a user's 2FA TOTP",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSendSuccessBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/2fa/totp/generate": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Generates a 2FA TOTP URL",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 auth"
                ],
                "summary": "Generate a 2FA TOTP URL",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_auth.Generate2FATOTPUrlResponseBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/2fa/totp/verify": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Verifies a 2FA TOTP code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 auth"
                ],
                "summary": "Verify a 2FA TOTP code",
                "parameters": [
                    {
                        "description": "Verify 2FA TOTP Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_auth.Verify2FATOTPRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSendSuccessBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/email": {
            "put": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Changes the email of the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 auth"
                ],
                "summary": "Changes the email of the authenticated user",
                "parameters": [
                    {
                        "description": "Change Email Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_auth.ChangeEmailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSendSuccessBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/email/send-verification": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Sends an email verification token to the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 auth"
                ],
                "summary": "Sends an email verification token to the authenticated user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSendSuccessBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/email/verify": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Verifies the email of the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 auth"
                ],
                "summary": "Verifies the email of the authenticated user",
                "parameters": [
                    {
                        "description": "Verify Email Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_auth.VerifyEmailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSendSuccessBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "description": "Authenticates a user and returns a seed token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 auth"
                ],
                "summary": "Log in a user",
                "parameters": [
                    {
                        "description": "Log In Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_auth.LogInRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_auth.LogInResponseBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/logout": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Logs out a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 auth"
                ],
                "summary": "Log out a user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSendSuccessBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/password": {
            "put": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Changes a user's password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 auth"
                ],
                "summary": "Change a user's password",
                "parameters": [
                    {
                        "description": "Change Password Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_auth.ChangePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSendSuccessBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/password/forgot": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Sends a password reset email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 auth"
                ],
                "summary": "Send a password reset email",
                "parameters": [
                    {
                        "description": "Forgot Password Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_auth.ForgotPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSendSuccessBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/password/reset": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Resets a user's password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 auth"
                ],
                "summary": "Reset a user's password",
                "parameters": [
                    {
                        "description": "Reset Password Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_auth.ResetPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSendSuccessBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/phone-number": {
            "put": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Changes the phone number of the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 auth"
                ],
                "summary": "Changes the phone number of the authenticated user",
                "parameters": [
                    {
                        "description": "Change Phone Number Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_auth.ChangePhoneNumberRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSendSuccessBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/phone-number/send-verification": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Sends a phone number verification code to the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 auth"
                ],
                "summary": "Sends a phone number verification code to the authenticated user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSendSuccessBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/phone-number/verify": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Verifies the phone number of the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 auth"
                ],
                "summary": "Verifies the phone number of the authenticated user",
                "parameters": [
                    {
                        "description": "Verify Phone Number Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_auth.VerifyPhoneNumberRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSendSuccessBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/refresh-token": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Gets a user's refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 auth"
                ],
                "summary": "Get a user's refresh token",
                "parameters": [
                    {
                        "description": "Get Refresh Token Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_auth.GetRefreshTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_auth.GetRefreshTokenResponseBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Refreshes a user token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 auth"
                ],
                "summary": "Refresh a user token",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.JSendSuccessBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Revokes a user's refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 auth"
                ],
                "summary": "Revoke a user's refresh token",
                "parameters": [
                    {
                        "description": "Revoke Refresh Token Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_auth.RevokeRefreshTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSendSuccessBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/refresh-tokens": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Gets a user's refresh tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 auth"
                ],
                "summary": "Get a user's refresh tokens",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_auth.ListRefreshTokensResponseBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Revokes a user's refresh tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 auth"
                ],
                "summary": "Revoke a user's refresh tokens",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSendSuccessBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/signup": {
            "post": {
                "description": "Creates a new user account with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 auth"
                ],
                "summary": "Sign up a new user",
                "parameters": [
                    {
                        "description": "Sign Up Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_auth.SignUpRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.JSendSuccessBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            }
        },
        "/api/v1/note": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Gets a user note",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 note"
                ],
                "summary": "Get a user note",
                "parameters": [
                    {
                        "description": "Get User Note Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_note.GetUserNoteByIDRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSendSuccessBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Updates a user note",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 note"
                ],
                "summary": "Update a user note",
                "parameters": [
                    {
                        "description": "Update User Note Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_note.UpdateUserNoteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSendSuccessBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Creates a user note",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 note"
                ],
                "summary": "Create a user note",
                "parameters": [
                    {
                        "description": "Create User Note Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_note.CreateUserNoteRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.JSendSuccessBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Deletes a user note",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 note"
                ],
                "summary": "Delete a user note",
                "parameters": [
                    {
                        "description": "Delete User Note Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_note.DeleteUserNoteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSendSuccessBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            }
        },
        "/api/v1/note/archive": {
            "put": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Updates a user note as archived or unarchived",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 note"
                ],
                "summary": "Update a user note as archived or unarchived",
                "parameters": [
                    {
                        "description": "Update User Note Archive Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_note.UpdateUserNoteArchiveRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSendSuccessBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            }
        },
        "/api/v1/note/pin": {
            "put": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Updates a user note as pinned or unpinned",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 note"
                ],
                "summary": "Update a user note as pinned or unpinned",
                "parameters": [
                    {
                        "description": "Update User Note Pin Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_note.UpdateUserNotePinRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSendSuccessBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            }
        },
        "/api/v1/note/star": {
            "put": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Updates a user note as starred or unstarred",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 note"
                ],
                "summary": "Update a user note as starred or unstarred",
                "parameters": [
                    {
                        "description": "Update User Note Star Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_note.UpdateUserNoteStarRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSendSuccessBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            }
        },
        "/api/v1/note/tags": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "List user note tags",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 note"
                ],
                "summary": "List user note tags",
                "parameters": [
                    {
                        "description": "List User UserNote Tags Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_note_tags.ListUserNoteTagsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_note_tags.ListUserNoteTagsResponseBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Removes user note tags",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 note"
                ],
                "summary": "Remove user note tags",
                "parameters": [
                    {
                        "description": "Remove User UserNote Tags Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_note_tags.RemoveUserNoteTagsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSendSuccessBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Adds user note tags",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 note"
                ],
                "summary": "Add user note tags",
                "parameters": [
                    {
                        "description": "Add User UserNote Tags Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_note_tags.AddUserNoteTagsRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.JSendSuccessBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            }
        },
        "/api/v1/note/trash": {
            "put": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Updates a user note as trashed or untrashed",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 note"
                ],
                "summary": "Update a user note as trashed or untrashed",
                "parameters": [
                    {
                        "description": "Update User Note Trash Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_note.UpdateUserNoteTrashRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSendSuccessBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            }
        },
        "/api/v1/note/version": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Gets a user note version by note version ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 note version"
                ],
                "summary": "Get a user note version by note version ID",
                "parameters": [
                    {
                        "description": "Get User Note Version By ID Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_note_version.GetUserNoteVersionByIDRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSendSuccessBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Creates a user note version",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 note version"
                ],
                "summary": "Create a user note version",
                "parameters": [
                    {
                        "description": "Create User Note Version Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_note_version.CreateUserNoteVersionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.JSendSuccessBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Deletes a user note version",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 note version"
                ],
                "summary": "Delete a user note version",
                "parameters": [
                    {
                        "description": "Delete User Note Version Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_note_version.DeleteUserNoteVersionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSendSuccessBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            }
        },
        "/api/v1/note/versions": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "List user note versions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 note versions"
                ],
                "summary": "List user note versions",
                "parameters": [
                    {
                        "description": "List User Note Versions Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_note_versions.ListUserNoteVersionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_note_versions.ListUserNoteVersionsResponseBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            }
        },
        "/api/v1/notes": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "List user notes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 notes"
                ],
                "summary": "List user notes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_notes.ListUserNotesResponseBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            }
        },
        "/api/v1/notes/sync": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Sync user notes by last synced at timestamp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 notes"
                ],
                "summary": "Sync user notes by last synced at timestamp",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_notes.SyncUserNotesByLastSyncedAtResponseBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            }
        },
        "/api/v1/ping": {
            "get": {
                "description": "Returns a pong response to check if the service is running",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1"
                ],
                "summary": "Ping the service",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSendSuccessBody"
                        }
                    }
                }
            }
        },
        "/api/v1/sync": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Synchronizes user notes and tags by the last synced at timestamp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1"
                ],
                "summary": "Synchronize user notes and tags by the last synced at timestamp",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1.SyncByLastSyncedAtResponseBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            }
        },
        "/api/v1/tag": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Gets a user tag by tag ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 tag"
                ],
                "summary": "Get a user tag by tag ID",
                "parameters": [
                    {
                        "description": "Get User Tag By ID Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_tag.GetUserTagByIDRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_tag.GetUserTagByIDResponseBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Updates a user tag",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 tag"
                ],
                "summary": "Update a user tag",
                "parameters": [
                    {
                        "description": "Update User Tag Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_tag.UpdateUserTagRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSendSuccessBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Creates a user tag",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 tag"
                ],
                "summary": "Create a user tag",
                "parameters": [
                    {
                        "description": "Create User Tag Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_tag.CreateUserTagRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.JSendSuccessBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Deletes a user tag",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 tag"
                ],
                "summary": "Delete a user tag",
                "parameters": [
                    {
                        "description": "Delete User Tag Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_tag.DeleteUserTagRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSendSuccessBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            }
        },
        "/api/v1/tags": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Lists tags of the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 tags"
                ],
                "summary": "List tags of the authenticated user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_tags.ListUserTagsResponseBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            }
        },
        "/api/v1/tags/sync": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Synchronizes tags of the authenticated user by last synced at timestamp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 tags"
                ],
                "summary": "Synchronize tags of the authenticated user by last synced at timestamp",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_tags.SyncUserTagsByLastSyncedAtResponseBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            }
        },
        "/api/v1/user": {
            "delete": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Deletes the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 user"
                ],
                "summary": "Deletes the authenticated user",
                "parameters": [
                    {
                        "description": "Delete User Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_user.DeleteUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSendSuccessBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            }
        },
        "/api/v1/user/profile": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Gets the profile of the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 user"
                ],
                "summary": "Gets the profile of the authenticated user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_user.GetMyProfileResponseBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Updates the profile of the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 user"
                ],
                "summary": "Updates the profile of the authenticated user",
                "parameters": [
                    {
                        "description": "Update Profile Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_user.UpdateProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSendSuccessBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            }
        },
        "/api/v1/user/username": {
            "put": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Changes the username of the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api v1 user"
                ],
                "summary": "Changes the username of the authenticated user",
                "parameters": [
                    {
                        "description": "Change Username Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_router_api_v1_user.ChangeUsernameRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JSendSuccessBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.JSendFailBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.JSendErrorBody"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_ralvarezdev_uru-frameworks-secure-notes-api_internal_databases_postgres_model.SyncUserNoteWithID": {
            "type": "object",
            "properties": {
                "archived_at": {
                    "type": "string"
                },
                "color": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "pinned_at": {
                    "type": "string"
                },
                "starred_at": {
                    "type": "string"
                },
                "sync_note_tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_ralvarezdev_uru-frameworks-secure-notes-api_internal_databases_postgres_model.UserNoteTag"
                    }
                },
                "sync_note_versions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_ralvarezdev_uru-frameworks-secure-notes-api_internal_databases_postgres_model.UserNoteVersionWithID"
                    }
                },
                "title": {
                    "type": "string"
                },
                "trashed_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "github_com_ralvarezdev_uru-frameworks-secure-notes-api_internal_databases_postgres_model.UserNoteTag": {
            "type": "object",
            "properties": {
                "assigned_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "tag_id": {
                    "type": "integer"
                }
            }
        },
        "github_com_ralvarezdev_uru-frameworks-secure-notes-api_internal_databases_postgres_model.UserNoteTagWithID": {
            "type": "object",
            "properties": {
                "assigned_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "tag_id": {
                    "type": "integer"
                }
            }
        },
        "github_com_ralvarezdev_uru-frameworks-secure-notes-api_internal_databases_postgres_model.UserNoteVersionWithID": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "encrypted_content": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "note_id": {
                    "type": "integer"
                }
            }
        },
        "github_com_ralvarezdev_uru-frameworks-secure-notes-api_internal_databases_postgres_model.UserRefreshToken": {
            "type": "object",
            "properties": {
                "expires_at": {
                    "type": "string"
                },
                "ip_address": {
                    "type": "string"
                },
                "issued_at": {
                    "type": "string"
                },
                "revoked_at": {
                    "type": "string"
                }
            }
        },
        "github_com_ralvarezdev_uru-frameworks-secure-notes-api_internal_databases_postgres_model.UserRefreshTokenWithID": {
            "type": "object",
            "properties": {
                "expires_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "ip_address": {
                    "type": "string"
                },
                "issued_at": {
                    "type": "string"
                },
                "revoked_at": {
                    "type": "string"
                }
            }
        },
        "github_com_ralvarezdev_uru-frameworks-secure-notes-api_internal_databases_postgres_model.UserTag": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "github_com_ralvarezdev_uru-frameworks-secure-notes-api_internal_databases_postgres_model.UserTagWithID": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "internal_router_api_v1.SyncByLastSyncedAtResponseBody": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/internal_router_api_v1.SyncByLastSyncedAtResponseData"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "internal_router_api_v1.SyncByLastSyncedAtResponseData": {
            "type": "object",
            "properties": {
                "sync_notes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_ralvarezdev_uru-frameworks-secure-notes-api_internal_databases_postgres_model.SyncUserNoteWithID"
                    }
                },
                "sync_tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_ralvarezdev_uru-frameworks-secure-notes-api_internal_databases_postgres_model.UserTagWithID"
                    }
                }
            }
        },
        "internal_router_api_v1_auth.ChangeEmailRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "internal_router_api_v1_auth.ChangePasswordRequest": {
            "type": "object",
            "properties": {
                "new_password": {
                    "type": "string"
                },
                "old_password": {
                    "type": "string"
                }
            }
        },
        "internal_router_api_v1_auth.ChangePhoneNumberRequest": {
            "type": "object",
            "properties": {
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "internal_router_api_v1_auth.DisableUser2FARequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                }
            }
        },
        "internal_router_api_v1_auth.EnableUser2FARequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                }
            }
        },
        "internal_router_api_v1_auth.ForgotPasswordRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "internal_router_api_v1_auth.Generate2FATOTPUrlResponseBody": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/internal_router_api_v1_auth.Generate2FATOTPUrlResponseData"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "internal_router_api_v1_auth.Generate2FATOTPUrlResponseData": {
            "type": "object",
            "properties": {
                "totp_url": {
                    "type": "string"
                }
            }
        },
        "internal_router_api_v1_auth.GetRefreshTokenRequest": {
            "type": "object",
            "properties": {
                "refresh_token_id": {
                    "type": "integer"
                }
            }
        },
        "internal_router_api_v1_auth.GetRefreshTokenResponseBody": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/internal_router_api_v1_auth.GetRefreshTokenResponseData"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "internal_router_api_v1_auth.GetRefreshTokenResponseData": {
            "type": "object",
            "properties": {
                "refresh_token": {
                    "$ref": "#/definitions/github_com_ralvarezdev_uru-frameworks-secure-notes-api_internal_databases_postgres_model.UserRefreshToken"
                }
            }
        },
        "internal_router_api_v1_auth.ListRefreshTokensResponseBody": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/internal_router_api_v1_auth.ListRefreshTokensResponseData"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "internal_router_api_v1_auth.ListRefreshTokensResponseData": {
            "type": "object",
            "properties": {
                "refresh_tokens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_ralvarezdev_uru-frameworks-secure-notes-api_internal_databases_postgres_model.UserRefreshTokenWithID"
                    }
                }
            }
        },
        "internal_router_api_v1_auth.LogInRequest": {
            "type": "object",
            "properties": {
                "2fa_code": {
                    "type": "string"
                },
                "2fa_method": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "internal_router_api_v1_auth.LogInResponseBody": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/internal_router_api_v1_auth.LogInResponseData"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "internal_router_api_v1_auth.LogInResponseData": {
            "type": "object",
            "properties": {
                "2fa_methods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "2fa_recovery_codes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "internal_router_api_v1_auth.RegenerateUser2FARecoveryCodesRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                }
            }
        },
        "internal_router_api_v1_auth.RegenerateUser2FARecoveryCodesResponseBody": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/internal_router_api_v1_auth.RegenerateUser2FARecoveryCodesResponseData"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "internal_router_api_v1_auth.RegenerateUser2FARecoveryCodesResponseData": {
            "type": "object",
            "properties": {
                "recovery_codes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "internal_router_api_v1_auth.ResetPasswordRequest": {
            "type": "object",
            "properties": {
                "new_password": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "internal_router_api_v1_auth.RevokeRefreshTokenRequest": {
            "type": "object",
            "properties": {
                "refresh_token_id": {
                    "type": "integer"
                }
            }
        },
        "internal_router_api_v1_auth.SendUser2FAEmailCodeRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "internal_router_api_v1_auth.SignUpRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "internal_router_api_v1_auth.Verify2FATOTPRequest": {
            "type": "object",
            "properties": {
                "totp_code": {
                    "type": "string"
                }
            }
        },
        "internal_router_api_v1_auth.VerifyEmailRequest": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "internal_router_api_v1_auth.VerifyPhoneNumberRequest": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "internal_router_api_v1_note.CreateUserNoteRequest": {
            "type": "object",
            "properties": {
                "archived": {
                    "type": "boolean"
                },
                "color": {
                    "type": "string"
                },
                "encrypted_content": {
                    "type": "string"
                },
                "note_tags_id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pinned": {
                    "type": "boolean"
                },
                "starred": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                },
                "trashed": {
                    "type": "boolean"
                }
            }
        },
        "internal_router_api_v1_note.DeleteUserNoteRequest": {
            "type": "object",
            "properties": {
                "note_id": {
                    "type": "integer"
                }
            }
        },
        "internal_router_api_v1_note.GetUserNoteByIDRequest": {
            "type": "object",
            "properties": {
                "note_id": {
                    "type": "integer"
                }
            }
        },
        "internal_router_api_v1_note.UpdateUserNoteArchiveRequest": {
            "type": "object",
            "properties": {
                "archive": {
                    "type": "boolean"
                },
                "note_id": {
                    "type": "integer"
                }
            }
        },
        "internal_router_api_v1_note.UpdateUserNotePinRequest": {
            "type": "object",
            "properties": {
                "note_id": {
                    "type": "integer"
                },
                "pin": {
                    "type": "boolean"
                }
            }
        },
        "internal_router_api_v1_note.UpdateUserNoteRequest": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string"
                },
                "note_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "internal_router_api_v1_note.UpdateUserNoteStarRequest": {
            "type": "object",
            "properties": {
                "note_id": {
                    "type": "integer"
                },
                "star": {
                    "type": "boolean"
                }
            }
        },
        "internal_router_api_v1_note.UpdateUserNoteTrashRequest": {
            "type": "object",
            "properties": {
                "note_id": {
                    "type": "integer"
                },
                "trash": {
                    "type": "boolean"
                }
            }
        },
        "internal_router_api_v1_note_tags.AddUserNoteTagsRequest": {
            "type": "object",
            "properties": {
                "note_id": {
                    "type": "integer"
                },
                "tags_id": {
                    "type": "string"
                }
            }
        },
        "internal_router_api_v1_note_tags.ListUserNoteTagsRequest": {
            "type": "object",
            "properties": {
                "note_id": {
                    "type": "integer"
                }
            }
        },
        "internal_router_api_v1_note_tags.ListUserNoteTagsResponseBody": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/internal_router_api_v1_note_tags.ListUserNoteTagsResponseData"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "internal_router_api_v1_note_tags.ListUserNoteTagsResponseData": {
            "type": "object",
            "properties": {
                "note_tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_ralvarezdev_uru-frameworks-secure-notes-api_internal_databases_postgres_model.UserNoteTagWithID"
                    }
                }
            }
        },
        "internal_router_api_v1_note_tags.RemoveUserNoteTagsRequest": {
            "type": "object",
            "properties": {
                "note_id": {
                    "type": "integer"
                },
                "tags_id": {
                    "type": "string"
                }
            }
        },
        "internal_router_api_v1_note_version.CreateUserNoteVersionRequest": {
            "type": "object",
            "properties": {
                "encrypted_content": {
                    "type": "string"
                },
                "note_id": {
                    "type": "integer"
                }
            }
        },
        "internal_router_api_v1_note_version.DeleteUserNoteVersionRequest": {
            "type": "object",
            "properties": {
                "note_version_id": {
                    "type": "integer"
                }
            }
        },
        "internal_router_api_v1_note_version.GetUserNoteVersionByIDRequest": {
            "type": "object",
            "properties": {
                "note_version_id": {
                    "type": "integer"
                }
            }
        },
        "internal_router_api_v1_note_versions.ListUserNoteVersionsRequest": {
            "type": "object",
            "properties": {
                "note_id": {
                    "type": "integer"
                }
            }
        },
        "internal_router_api_v1_note_versions.ListUserNoteVersionsResponseBody": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/internal_router_api_v1_note_versions.ListUserNoteVersionsResponseData"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "internal_router_api_v1_note_versions.ListUserNoteVersionsResponseData": {
            "type": "object",
            "properties": {
                "note_versions_id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "internal_router_api_v1_notes.ListUserNotesResponseBody": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/internal_router_api_v1_notes.ListUserNotesResponseData"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "internal_router_api_v1_notes.ListUserNotesResponseData": {
            "type": "object",
            "properties": {
                "notes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "internal_router_api_v1_notes.SyncUserNotesByLastSyncedAtResponseBody": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/internal_router_api_v1_notes.SyncUserNotesByLastSyncedAtResponseData"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "internal_router_api_v1_notes.SyncUserNotesByLastSyncedAtResponseData": {
            "type": "object",
            "properties": {
                "sync_notes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_ralvarezdev_uru-frameworks-secure-notes-api_internal_databases_postgres_model.SyncUserNoteWithID"
                    }
                }
            }
        },
        "internal_router_api_v1_tag.CreateUserTagRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "internal_router_api_v1_tag.DeleteUserTagRequest": {
            "type": "object",
            "properties": {
                "tag_id": {
                    "type": "integer"
                }
            }
        },
        "internal_router_api_v1_tag.GetUserTagByIDRequest": {
            "type": "object",
            "properties": {
                "tag_id": {
                    "type": "integer"
                }
            }
        },
        "internal_router_api_v1_tag.GetUserTagByIDResponseBody": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/internal_router_api_v1_tag.GetUserTagByIDResponseData"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "internal_router_api_v1_tag.GetUserTagByIDResponseData": {
            "type": "object",
            "properties": {
                "tag": {
                    "$ref": "#/definitions/github_com_ralvarezdev_uru-frameworks-secure-notes-api_internal_databases_postgres_model.UserTag"
                }
            }
        },
        "internal_router_api_v1_tag.UpdateUserTagRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "tag_id": {
                    "type": "integer"
                }
            }
        },
        "internal_router_api_v1_tags.ListUserTagsResponseBody": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/internal_router_api_v1_tags.ListUserTagsResponseData"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "internal_router_api_v1_tags.ListUserTagsResponseData": {
            "type": "object",
            "properties": {
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_ralvarezdev_uru-frameworks-secure-notes-api_internal_databases_postgres_model.UserTagWithID"
                    }
                }
            }
        },
        "internal_router_api_v1_tags.SyncUserTagsByLastSyncedAtResponseBody": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/internal_router_api_v1_tags.SyncUserTagsByLastSyncedAtResponseData"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "internal_router_api_v1_tags.SyncUserTagsByLastSyncedAtResponseData": {
            "type": "object",
            "properties": {
                "sync_tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_ralvarezdev_uru-frameworks-secure-notes-api_internal_databases_postgres_model.UserTagWithID"
                    }
                }
            }
        },
        "internal_router_api_v1_user.ChangeUsernameRequest": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string"
                }
            }
        },
        "internal_router_api_v1_user.DeleteUserRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                }
            }
        },
        "internal_router_api_v1_user.GetMyProfileResponseBody": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/internal_router_api_v1_user.GetMyProfileResponseData"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "internal_router_api_v1_user.GetMyProfileResponseData": {
            "type": "object",
            "properties": {
                "birthdate": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "email_is_verified": {
                    "type": "boolean"
                },
                "first_name": {
                    "type": "string"
                },
                "has_totp_enabled": {
                    "type": "boolean"
                },
                "last_name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "phone_is_verified": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "internal_router_api_v1_user.UpdateProfileRequest": {
            "type": "object",
            "properties": {
                "birthdate": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                }
            }
        },
        "response.JSendErrorBody": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {},
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "response.JSendFailBody": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {},
                "status": {
                    "type": "string"
                }
            }
        },
        "response.JSendSuccessBody": {
            "type": "object",
            "properties": {
                "data": {},
                "status": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "CookieAuth": {
            "type": "apiKey",
            "name": "access_token",
            "in": "cookie"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Secure Notes REST API",
	Description:      "This is the REST API for the Secure Notes application.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
